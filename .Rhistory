mutate(TOTAL_POP_100K = (Population / 100000))
dcWards$Cases / dcWards$TOTAL_POP_100K
max(dcWards$Cases / dcWards$TOTAL_POP_100K)
round(max(dcWards$Cases / dcWards$TOTAL_POP_100K) + 1, 0)
dcWardPerCapUpperBoundary <- round(max(dcWards$Cases / dcWards$TOTAL_POP_100K) + 1, 0)
dcWardPerCapUpperBoundary %% 6
while(dcWardPerCapUpperBoundary %% 6 != 0) {
dcWardPerCapUpperBoundary = dcWardPerCapUpperBoundary + 1
}
seq(from = 0, to = dcWardPerCapUpperBoundary, by = dcWardPerCapUpperBoundary / 6)
dcWardPerCapBins <- seq(from = 0, to = dcWardPerCapUpperBoundary, by = dcWardPerCapUpperBoundary / 6)
dcWardPalette
dcWardPalette <- colorBin(palette = "YlOrRd", domain = dcWards$Cases, na.color = "transparent", bins = dcWardBins)
dcWardPerCapPalette <- colorBin(palette = "YlOrRd", domain = dcWards$Cases, na.color = "transparent", bins = dcWardPerCapBins)
round((dcWards$Cases / dcWards$TOTAL_POP_100K), 1)
dcWardlegendText <- paste0(
"Ward: ", dcWards$WARD, "<br/>",
"Cases: ", dcWards$Cases, "<br/>"
) %>%
lapply(htmltools::HTML)
# Make the per capita leaflet chloropleth
dcWardlegendTextPerCap <- paste0(
"Ward: ", dcWards$WARD, "<br/>",
"Rate per 100K: ", round((dcWards$Cases / dcWards$TOTAL_POP_100K), 1), "<br/>"
) %>%
lapply(htmltools::HTML)
dcWardAttribution <- htmltools::HTML("Map data &copy; <a href='https://www.openstreetmap.org/'>OpenStreetMap</a> contributors, <a href='https://creativecommons.org/licenses/by-sa/2.0/'>CC-BY-SA</a><br/>Data from: <a href='https://coronavirus.dc.gov/page/coronavirus-data'>DC Mayor's Office</a>")
leaflet(dcWards) %>%
addTiles(attribution = dcWardAttribution) %>%
setView(lat = "38.923468", lng = "-77.018925", zoom = 9) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPalette(Cases),
weight = 0.5,
label = dcWardlegendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPerCapPalette((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = dcWardlegendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPalette,
values=~Cases,
opacity=0.9,
title = paste("Case count", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPerCapPalette,
values=~(Cases / TOTAL_POP_100K),
opacity=0.9,
title = paste("Case rate per 100K", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLayersControl(baseGroups = c(paste("Case count", Sys.Date() - 1, sep = " "),
paste("Case rate per 100K", Sys.Date() - 1, sep = " ")),
position = "topright",
options = layersControlOptions(collapsed = F)) %>%
htmlwidgets::onRender(
"function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}"
)
leaflet(dcWards) %>%
addTiles(attribution = dcWardAttribution) %>%
setView(lat = "38.923468", lng = "-77.018925", zoom = 11) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPalette(Cases),
weight = 0.5,
label = dcWardlegendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPerCapPalette((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = dcWardlegendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPalette,
values=~Cases,
opacity=0.9,
title = paste("Case count", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPerCapPalette,
values=~(Cases / TOTAL_POP_100K),
opacity=0.9,
title = paste("Case rate per 100K", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLayersControl(baseGroups = c(paste("Case count", Sys.Date() - 1, sep = " "),
paste("Case rate per 100K", Sys.Date() - 1, sep = " ")),
position = "topright",
options = layersControlOptions(collapsed = F)) %>%
htmlwidgets::onRender(
"function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}"
)
leaflet(dcWards) %>%
addTiles(attribution = dcWardAttribution) %>%
setView(lat = "38.907974", lng = "-77.018925", zoom = 11) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPalette(Cases),
weight = 0.5,
label = dcWardlegendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPerCapPalette((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = dcWardlegendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPalette,
values=~Cases,
opacity=0.9,
title = paste("Case count", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPerCapPalette,
values=~(Cases / TOTAL_POP_100K),
opacity=0.9,
title = paste("Case rate per 100K", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLayersControl(baseGroups = c(paste("Case count", Sys.Date() - 1, sep = " "),
paste("Case rate per 100K", Sys.Date() - 1, sep = " ")),
position = "topright",
options = layersControlOptions(collapsed = F)) %>%
htmlwidgets::onRender(
"function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}"
)
leaflet(dcWards) %>%
addTiles(attribution = dcWardAttribution) %>%
setView(lat = "38.889802", lng = "-77.010447", zoom = 11) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPalette(Cases),
weight = 0.5,
label = dcWardlegendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPerCapPalette((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = dcWardlegendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPalette,
values=~Cases,
opacity=0.9,
title = paste("Case count", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPerCapPalette,
values=~(Cases / TOTAL_POP_100K),
opacity=0.9,
title = paste("Case rate per 100K", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLayersControl(baseGroups = c(paste("Case count", Sys.Date() - 1, sep = " "),
paste("Case rate per 100K", Sys.Date() - 1, sep = " ")),
position = "topright",
options = layersControlOptions(collapsed = F)) %>%
htmlwidgets::onRender(
"function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}"
)
leaflet(dcWards) %>%
addTiles(attribution = dcWardAttribution) %>%
setView(lat = "38.889802", lng = "-77.010447", zoom = 11) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPalette(Cases),
weight = 0.5,
label = dcWardlegendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPerCapPalette((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = dcWardlegendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPalette,
values=~Cases,
opacity=0.9,
title = paste("Case count", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPerCapPalette,
values=~(Cases / TOTAL_POP_100K),
opacity=0.9,
title = paste("Case rate per 100K", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLayersControl(baseGroups = c(paste("Case count", Sys.Date() - 1, sep = " "),
paste("Case rate per 100K", Sys.Date() - 1, sep = " ")),
position = "bottomleft",
options = layersControlOptions(collapsed = F)) %>%
htmlwidgets::onRender(
"function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}"
)
leaflet(dcWards) %>%
addTiles(attribution = dcWardAttribution) %>%
setView(lat = "38.889802", lng = "-77.010447", zoom = 10) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPalette(Cases),
weight = 0.5,
label = dcWardlegendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPerCapPalette((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = dcWardlegendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPalette,
values=~Cases,
opacity=0.9,
title = paste("Case count", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPerCapPalette,
values=~(Cases / TOTAL_POP_100K),
opacity=0.9,
title = paste("Case rate per 100K", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLayersControl(baseGroups = c(paste("Case count", Sys.Date() - 1, sep = " "),
paste("Case rate per 100K", Sys.Date() - 1, sep = " ")),
position = "bottomleft",
options = layersControlOptions(collapsed = F)) %>%
htmlwidgets::onRender(
"function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}"
)
leaflet(dcWards) %>%
addTiles(attribution = dcWardAttribution) %>%
setView(lat = "38.889802", lng = "-77.010447", zoom = 11) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPalette(Cases),
weight = 0.5,
label = dcWardlegendText,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addPolygons(stroke=T,
opacity = 1,
fillOpacity = 0.9,
smoothFactor = 0.5,
color = "black",
fillColor = ~dcWardPerCapPalette((Cases / TOTAL_POP_100K)),
weight = 0.5,
label = dcWardlegendTextPerCap,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"
),
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPalette,
values=~Cases,
opacity=0.9,
title = paste("Case count", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case count", Sys.Date() - 1, sep = " ")) %>%
addLegend( pal=dcWardPerCapPalette,
values=~(Cases / TOTAL_POP_100K),
opacity=0.9,
title = paste("Case rate per 100K", Sys.Date() - 1, sep = " "),
position = "topright",
group = paste("Case rate per 100K", Sys.Date() - 1, sep = " ")) %>%
addLayersControl(baseGroups = c(paste("Case count", Sys.Date() - 1, sep = " "),
paste("Case rate per 100K", Sys.Date() - 1, sep = " ")),
position = "bottomleft",
options = layersControlOptions(collapsed = F)) %>%
htmlwidgets::onRender(
"function(el, x) {
var updateLegend = function () {
var selectedGroup = document.querySelectorAll('input:checked')[0].nextSibling.innerText.substr(1);
document.querySelectorAll('.legend').forEach(a => a.hidden=true);
document.querySelectorAll('.legend').forEach(l => {
if (l.children[0].children[0].innerText == selectedGroup) l.hidden=false;
});
};
updateLegend();
this.on('baselayerchange', e => updateLegend());
}"
)
plot_ly(data = dcCovid19Hospitals, x = ~Date) %>%
add_trace(y = ~Units,
color = ~factor(Resource),
colors = pals::glasbey(),
mode = "lines+markers",
type = "scatter",
hovertemplate = paste(
"Resource: ", dcCovid19Hospitals$Resource,
"<br>Units: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
layout(yaxis = list(""),
xaxis = list(
type = 'date',
tickformat = "%d %B"
),
showlegend = T)
plot_ly(data = dcCovid19Hospitals, x = ~Date) %>%
add_trace(y = ~Units,
color = ~factor(Resource),
colors = pals::glasbey(),
mode = "lines+markers",
type = "scatter",
hovertemplate = paste(
"Resource: ", dcCovid19Hospitals$Resource,
"<br>Units: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
layout(yaxis = list(title = ""),
xaxis = list(
type = 'date',
tickformat = "%d %B"
),
showlegend = T)
plot_ly(data = dcCovid19Hospitals, x = ~Date) %>%
add_trace(y = ~Units,
color = ~factor(Resource),
colors = pals::glasbey(),
mode = "lines+markers",
type = "scatter",
hovertemplate = paste(
"Resource: ", dcCovid19Hospitals$Resource,
"<br>Units: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
layout(xaxis = list(
type = 'date',
tickformat = "%d %B",
title = ""
),
showlegend = T)
system("curl -k https://www.vdh.virginia.gov/content/uploads/sites/182/2020/03/VDH-COVID-19-PublicUseDataset-Cases.csv")
system("curl -k https://www.vdh.virginia.gov/content/uploads/sites/182/2020/03/VDH-COVID-19-PublicUseDataset-Cases.csv") -> Virginia_By_County_Today
download.file(system("curl -k https://www.vdh.virginia.gov/content/uploads/sites/182/2020/03/VDH-COVID-19-PublicUseDataset-Cases.csv"), destfile = "test.csv")
rm(Virginia_By_County_Today)
system("wget --wait=2 --no-check-certificate -i VDH_URLs.txt")
system("wget --wait=2 --no-check-certificate -i VDH_URLs.txt")
system("wget --wait=2 --no-check-certificate -i VDH_URLs.txt")
system("rm VDH-COVID-19*.csv")
