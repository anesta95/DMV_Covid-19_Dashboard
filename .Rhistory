hovertemplate = paste(
"State: ", dmvCasesByCountyBarPerCapPlotly$State,
"<br>County: ", dmvCasesByCountyBarPerCapPlotly$County,
"<br>Cases: ", "%{y}",
"<br>Date: ", dmvCasesByCountyBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Case_Rate_100K,
color = ~factor(reorder(County, ~Case_Rate_100K)),
colors = "Set3",
hovertemplate = paste(
"State: ", dmvCasesByCountyBarPerCapPlotly$State,
"<br>County: ", dmvCasesByCountyBarPerCapPlotly$County,
"<br>Cases: ", "%{y}",
"<br>Date: ", dmvCasesByCountyBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Cases & Case Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 12), rep(list(T), 12))),
label = "Cases"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 12), rep(list(F), 12))),
label = "Cases per 100K")))
))
plot_ly(dmvCasesByCountyBarPerCapPlotly, x = ~factor(State), type = "bar", color = ~factor(reorder(County, -Cases)), colors = "Set3") %>%
add_trace(y = ~Cases,
hovertemplate = paste(
"State: ", dmvCasesByCountyBarPerCapPlotly$State,
"<br>County: ", dmvCasesByCountyBarPerCapPlotly$County,
"<br>Cases: ", "%{y}",
"<br>Date: ", dmvCasesByCountyBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Case_Rate_100K,
hovertemplate = paste(
"State: ", dmvCasesByCountyBarPerCapPlotly$State,
"<br>County: ", dmvCasesByCountyBarPerCapPlotly$County,
"<br>Cases: ", "%{y}",
"<br>Date: ", dmvCasesByCountyBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Cases & Case Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 12), rep(list(T), 12))),
label = "Cases"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 12), rep(list(F), 12))),
label = "Cases per 100K")))
))
dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040")
dailySummary <- read_csv("covidSummaryDCist.csv")
dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040")
dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Case_Rate_100K = (Cases / TOTAL_POP_100K))
DMVTestsLinePerCapPlotly <- dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Case_Rate_100K = (Cases / TOTAL_POP_100K))
DMVTestsLinePerCapPlotly
dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Test_Rate_100K = (Tests / TOTAL_POP_100K))
DMVTestsLinePerCapPlotly <- dailySummary %>%
drop_na(Tests) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Test_Rate_100K = (Tests / TOTAL_POP_100K))
DMVTestsLinePerCapPlotly
View(DMVTestsLinePerCapPlotly)
plot_ly(data = DMVTestsLinePerCapPlotly, x = ~Date) %>%
add_trace(y = ~Tests,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", DMVTestsLinePerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Test_Rate_100K,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", DMVTestsLinePerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = F) %>%
layout(yaxis = list(type = "log"),
title = "DMV Covid-19 Tests & Test Rate by County",
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(TRUE), 12), rep(list(FALSE), 12))),
label = "Tests"),
list(method = "restyle",
args = list("visible", append(rep(list(FALSE), 12), rep(list(TRUE), 12))),
label = "Tests per 100K")))
))
plot_ly(data = DMVTestsLinePerCapPlotly, x = ~Date) %>%
add_trace(y = ~Tests,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", DMVTestsLinePerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Test_Rate_100K,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", DMVTestsLinePerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = F) %>%
layout(title = "DMV Covid-19 Tests & Test Rate by County",
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(TRUE), 12), rep(list(FALSE), 12))),
label = "Tests"),
list(method = "restyle",
args = list("visible", append(rep(list(FALSE), 12), rep(list(TRUE), 12))),
label = "Tests per 100K")))
))
plot_ly(data = DMVTestsLinePerCapPlotly, x = ~Date) %>%
add_trace(y = ~Tests,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", DMVTestsLinePerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Test_Rate_100K,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", DMVTestsLinePerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = F) %>%
layout(title = "DMV Covid-19 Tests & Test Rate by County",
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(TRUE), 3), rep(list(FALSE), 3))),
label = "Tests"),
list(method = "restyle",
args = list("visible", append(rep(list(FALSE), 3), rep(list(TRUE), 3))),
label = "Tests per 100K")))
))
dailySummary %>%
drop_na(Tests) %>%
filter(Date == max(Date)) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Test_Rate_100K = (Tests / TOTAL_POP_100K))
plot_ly(DMVTestsBarPerCapPlotly, x = ~factor(State), type = "bar", color = ~factor(State), colors = c("#E91436", "#ebab00ff", "#00257C")) %>%
add_trace(y = ~Tests,
hovertemplate = paste(
"State: ", DMVTestsBarPerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", DMVTestsBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Test_Rate_100K,
hovertemplate = paste(
"State: ", DMVTestsBarPerCapPlotly$State,
"<br>Cases: ", "%{y}",
"<br>Date: ", DMVTestsBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Tests & Test Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 3), rep(list(T), 3))),
label = "Cases"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 3), rep(list(F), 3))),
label = "Cases per 100K")))
))
DMVTestsBarPerCapPlotly
DMVTestsBarPerCapPlotly <- dailySummary %>%
drop_na(Tests) %>%
filter(Date == max(Date)) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Test_Rate_100K = (Tests / TOTAL_POP_100K))
plot_ly(DMVTestsBarPerCapPlotly, x = ~factor(State), type = "bar", color = ~factor(State), colors = c("#E91436", "#ebab00ff", "#00257C")) %>%
add_trace(y = ~Tests,
hovertemplate = paste(
"State: ", DMVTestsBarPerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", DMVTestsBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Test_Rate_100K,
hovertemplate = paste(
"State: ", DMVTestsBarPerCapPlotly$State,
"<br>Cases: ", "%{y}",
"<br>Date: ", DMVTestsBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Tests & Test Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 3), rep(list(T), 3))),
label = "Cases"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 3), rep(list(F), 3))),
label = "Cases per 100K")))
))
dailySummary %>%
drop_na(State) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Death_Rate_100K = (Deaths / TOTAL_POP_100K))
dcmdvaDeathsLinePlotly
dcmdvaDeathsLinePlotly <- dailySummary %>%
drop_na(State) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Death_Rate_100K = (Deaths / TOTAL_POP_100K))
plot_ly(data = dcmdvaDeathsLinePlotly, x = ~Date) %>%
add_trace(y = ~Tests,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", dcmdvaDeathsLinePlotly$State,
"<br>Deaths: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Death_Rate_100K,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", dcmdvaDeathsLinePlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = F) %>%
layout(title = "DMV Covid-19 Deaths & Death Rate by State",
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(TRUE), 3), rep(list(FALSE), 3))),
label = "Deaths"),
list(method = "restyle",
args = list("visible", append(rep(list(FALSE), 3), rep(list(TRUE), 3))),
label = "Deaths per 100K")))
))
dailySummary %>%
drop_na(State) %>%
filter(Date == max(Date)) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Death_Rate_100K = (Deaths / TOTAL_POP_100K))
dcmdvaDeathsBar <- dailySummary %>%
drop_na(State) %>%
filter(Date == max(Date)) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Death_Rate_100K = (Deaths / TOTAL_POP_100K))
dcmdvaDeathsBarPlotly <- dailySummary %>%
drop_na(State) %>%
filter(Date == max(Date)) %>%
left_join(stateCountyPops, by = c("State" = "STNAME")) %>%
filter(SUMLEV == "040") %>%
mutate(Death_Rate_100K = (Deaths / TOTAL_POP_100K))
plot_ly(data = dcmdvaDeathsLinePlotly, x = ~Date) %>%
add_trace(y = ~Deaths,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", dcmdvaDeathsLinePlotly$State,
"<br>Deaths: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Death_Rate_100K,
linetype = ~factor(State),
color = ~factor(State),
colors = c("#E91436", "#ebab00ff", "#00257C"),
mode = "lines+markers",
type = "scatter",
symbol = ~State,
hovertemplate = paste(
"State: ", dcmdvaDeathsLinePlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", "%{x}",
"<extra></extra>"
),
visible = F) %>%
layout(title = "DMV Covid-19 Deaths & Death Rate by State",
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(TRUE), 3), rep(list(FALSE), 3))),
label = "Deaths"),
list(method = "restyle",
args = list("visible", append(rep(list(FALSE), 3), rep(list(TRUE), 3))),
label = "Deaths per 100K")))
))
plot_ly(dcmdvaDeathsBarPlotly, x = ~factor(State), type = "bar", color = ~factor(State), colors = c("#E91436", "#ebab00ff", "#00257C")) %>%
add_trace(y = ~Deaths,
hovertemplate = paste(
"State: ", dcmdvaDeathsBarPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", dcmdvaDeathsBarPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Death_Rate_100K,
hovertemplate = paste(
"State: ", dcmdvaDeathsBarPlotly$State,
"<br>Cases: ", "%{y}",
"<br>Date: ", dcmdvaDeathsBarPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Deaths & Death Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 3), rep(list(T), 3))),
label = "Deaths"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 3), rep(list(F), 3))),
label = "Death per 100K")))
))
plot_ly(DMVTestsBarPerCapPlotly, x = ~factor(State), type = "bar", color = ~factor(State), colors = c("#E91436", "#ebab00ff", "#00257C")) %>%
add_trace(y = ~Tests,
hovertemplate = paste(
"State: ", DMVTestsBarPerCapPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", DMVTestsBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Test_Rate_100K,
hovertemplate = paste(
"State: ", DMVTestsBarPerCapPlotly$State,
"<br>Cases: ", "%{y}",
"<br>Date: ", DMVTestsBarPerCapPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Tests & Test Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 3), rep(list(T), 3))),
label = "Tests"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 3), rep(list(F), 3))),
label = "Tests per 100K")))
))
plot_ly(dcmdvaDeathsBarPlotly, x = ~factor(State), type = "bar", color = ~factor(State), colors = c("#E91436", "#ebab00ff", "#00257C")) %>%
add_trace(y = ~Deaths,
hovertemplate = paste(
"State: ", dcmdvaDeathsBarPlotly$State,
"<br>Tests: ", "%{y}",
"<br>Date: ", dcmdvaDeathsBarPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Death_Rate_100K,
hovertemplate = paste(
"State: ", dcmdvaDeathsBarPlotly$State,
"<br>Cases: ", "%{y}",
"<br>Date: ", dcmdvaDeathsBarPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Deaths & Death Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 3), rep(list(T), 3))),
label = "Deaths"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 3), rep(list(F), 3))),
label = "Death per 100K")))
))
dcmdvaDeathsBarPlotly
plot_ly(dcmdvaDeathsBarPlotly, x = ~factor(State), type = "bar", color = ~factor(State), colors = c("#E91436", "#ebab00ff", "#00257C")) %>%
add_trace(y = ~Deaths,
hovertemplate = paste(
"State: ", dcmdvaDeathsBarPlotly$State,
"<br>Deaths: ", "%{y}",
"<br>Date: ", dcmdvaDeathsBarPlotly$Date,
"<extra></extra>"
),
visible = T) %>%
add_trace(y = ~Death_Rate_100K,
hovertemplate = paste(
"State: ", dcmdvaDeathsBarPlotly$State,
"<br>Deaths: ", "%{y}",
"<br>Date: ", dcmdvaDeathsBarPlotly$Date,
"<extra></extra>"
),
visible = F) %>%
layout(title = paste("DMV Covid-19 Deaths & Death Rate by County on", Sys.Date() - 1, sep = " "),
showlegend = F,
updatemenus = list(
list(active = 0,
buttons = list(
list(method = "restyle",
args = list("visible", append(rep(list(F), 3), rep(list(T), 3))),
label = "Deaths"),
list(method = "restyle",
args = list("visible", append(rep(list(T), 3), rep(list(F), 3))),
label = "Death per 100K")))
))
